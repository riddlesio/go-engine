package com.theaigames.boardgame;

/**
 * abstract class AbstractBoard
 * 
 * DO NOT EDIT THIS FILE
 * 
 * Extend this class with your main method.
 * 
 * @author Joost de Meij <developers@starapple.nl>
 */
public abstract class AbstractBoard {
	private AbstractField[][] mFields;
	private int mCols = 0, mRows = 0;
	
	public AbstractBoard() {
	}
	
	/**
	 * Set up a new board
	 * @param args : cols and rows
	 */
	public AbstractBoard(int cols, int rows) {
		mFields = new AbstractField[rows][cols];
		for (int x = 0; x < cols; x++) {
			for (int y = 0; y < rows; y++) {
				mFields[y][x] = new AbstractField();
			}
		}
	}
	
	/**
	 * Implement this class. Set up a specific board for a game.
	 */
	protected abstract void initialise();
	
	/**
	 * Returns AbstractField at given position.
	 * @param args : col and row of position
	 * @param returns : AbstractField or null if out of bounds. 
	 */
	public AbstractField getFieldAt(int col, int row) {
		if (col < mCols && row < mRows && col >= 0 && row >= 0) {
			return mFields[row][col];
		}
		return null;
	}
	
	/**
	 * Returns AbstractField at given position.
	 * @param args : col and row of position
	 * @param returns : AbstractField or null if out of bounds. 
	 */
	public AbstractField setFieldAt(int col, int row) {
		if (col < mCols && row < mRows && col >= 0 && row >= 0) {
			return mFields[row][col];
		}
		return null;
	}
}
